/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        mo_kp: mo_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_KP";
            bindings =
                <&mo>,
                <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        bt_clr {
            bindings = <&bt BT_CLR>;
            key-positions = <29 30>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none           &kp Q        &kp W               &kp E             &kp R           &kp T             &kp Y              &kp U                &kp I                &kp O            &kp P  &none
&none           &kp A        &kp S               &kp D             &kp F      &kp DELETE     &kp BACKSPACE              &kp H                &kp J                &kp K            &kp L  &none
&none  &mt LEFT_ALT Z  &mt LCTRL X  &mt LEFT_COMMAND C  &mt LEFT_SHIFT V           &none             &none  &mt RIGHT_SHIFT G  &mt RIGHT_COMMAND B  &mt RIGHT_CONTROL N  &mt RIGHT_ALT M  &none
                                                 &mo 1      &mo_kp 2 TAB  &mo_kp 3 SPACE    &mo_kp 4 ENTER    &mo_kp 5 ESCAPE                &mo 6
            >;
        };

        mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        navigation {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp RA(RG(LEFT))  &kp PG_DN  &kp PG_UP  &kp RA(RG(RIGHT))  &trans
 &none  &trans  &trans  &trans  &trans  &trans    &trans          &kp LEFT   &kp DOWN     &kp UP          &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &kp RG(LEFT)    &kp END   &kp HOME      &kp RG(RIGHT)  &trans
                        &trans  &trans  &trans    &trans            &trans     &trans
            >;
        };

        numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N7  &kp N8  &kp N9     &kp N0  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N4  &kp N5  &kp N6  &kp MINUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N1  &kp N2  &kp N3  &kp EQUAL  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        punctuation_brackets {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none   &kp LESS_THAN  &kp GREATER_THAN  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans    &trans  &trans  &trans  &trans  &trans  &none
&none   &kp SEMICOLON         &kp COMMA             &kp COLON             &kp PERIOD  &trans    &trans  &trans  &trans  &trans  &trans  &none
&none  &kp LEFT_BRACE   &kp RIGHT_BRACE      &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &trans    &trans  &trans  &trans  &trans  &trans  &none
                                                       &trans                 &trans  &trans    &trans  &trans  &trans
            >;
        };

        quotes_dashes {
            bindings = <
&trans    &kp LA(A)   &kp PIPE           &kp BSLH  &kp SLASH  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans    &kp LA(O)  &kp GRAVE  &kp DOUBLE_QUOTES    &kp SQT  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LA(SQT)  &kp TILDE     &kp UNDERSCORE  &kp MINUS  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                           &trans     &trans  &trans    &trans  &trans  &trans
            >;
        };

        function_keys {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3   &kp F4  &trans    &bt BT_CLR  &kp F13  &kp F14  &kp F15  &kp F16  &trans
&trans  &kp F5   &kp F6   &kp F7   &kp F8  &trans    &bt BT_PRV  &kp F17  &kp F18  &kp F19  &kp F20  &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &bt BT_NXT  &kp F21  &kp F22  &kp F23  &kp F24  &trans
                          &trans   &trans  &trans        &trans   &trans   &trans
            >;
        };
    };
};
