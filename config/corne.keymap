/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        mo_kp: mo_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_KP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        bt_clr {
            bindings = <&bt BT_CLR>;
            key-positions = <29 30>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&none  &kp Q           &kp W        &kp G               &kp F                 &kp K             &kp J           &kp U              &kp H                &kp P                &kp Y            &none
&none  &mt LEFT_ALT D  &mt LCTRL A  &mt LEFT_COMMAND S  &mt LEFT_SHIFT E      &kp PERIOD        &kp COLON       &mt RIGHT_SHIFT T  &mt RIGHT_COMMAND I  &mt RIGHT_CONTROL O  &mt RIGHT_ALT N  &none
&none  &kp Z           &kp X        &kp V               &kp C                 &kp COMMA         &kp SEMICOLON   &kp R              &kp L                &kp M                &kp B            &none
                                    &kp DELETE          &mt LEFT_COMMAND TAB  &mo_kp 1 SPACE    &mo_kp 2 ENTER  &mo_kp 3 ESCAPE    &kp BACKSPACE
            >;
        };

        brackets+function {
            bindings = <
&trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp BACKSLASH      &kp SLASH  &kp PIPE     &kp RA(A)    &kp AMPERSAND    &kp ASTERISK  &kp LESS_THAN  &kp GREATER_THAN  &trans
&trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOUBLE_QUOTES  &kp SQT    &kp GRAVE    &kp RA(O)    &kp DOLLAR       &kp PERCENT   &kp CARET      &kp QUESTION      &trans
&trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp UNDERSCORE     &kp MINUS  &kp TILDE    &kp RA(SQT)  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH       &trans            &trans
                                                     &trans             &trans     &trans       &trans       &trans           &trans
            >;
        };

        navigation {
            bindings = <
&bt BT_PRV  &mwh SCROLL_LEFT  &mwh SCROLL_UP  &mwh SCROLL_DOWN  &mwh SCROLL_RIGHT  &trans    &trans  &kp RA(RG(LEFT))  &kp PG_DN  &kp PG_UP  &kp RA(RG(RIGHT))  &trans
&bt BT_NXT  &mmv MOVE_LEFT    &mmv MOVE_UP    &mmv MOVE_DOWN    &mmv MOVE_RIGHT    &trans    &trans  &kp LEFT          &kp DOWN   &kp UP     &kp RIGHT          &trans
&bt BT_CLR  &mkp LCLK         &mkp MB4        &mkp MCLK         &mkp RCLK          &trans    &trans  &kp RG(LEFT)      &kp END    &kp HOME   &kp RG(RIGHT)      &trans
                                              &trans            &trans             &trans    &trans  &trans            &trans
            >;
        };

        chars+numpad {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5     &kp SLASH     &kp N7  &kp N8  &kp N9  &kp N0     &trans
&trans  &kp F6   &kp F7   &kp F8   &kp F9   &kp F10    &kp PLUS      &kp N4  &kp N5  &kp N6  &kp MINUS  &trans
&trans  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15    &kp ASTERISK  &kp N1  &kp N2  &kp N3  &kp EQUAL  &trans
                          &trans   &trans   &trans     &trans        &trans  &trans
            >;
        };
    };
};
