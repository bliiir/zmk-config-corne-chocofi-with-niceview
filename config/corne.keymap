/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        mo_kp: mo_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_KP";
            bindings =
                <&mo>,
                <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        back_to_base {
            bindings = <&lt 1 0>;
            key-positions = <36 41>;
            layers = <0>;
        };

        bt_clr {
            bindings = <&bt 0>;
            key-positions = <29 30>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none           &kp Q        &kp F               &kp G               &kp C           &kp X             &kp Z              &kp U                &kp P                &kp M            &kp Y  &none
&none  &mt LEFT_ALT N  &mt LCTRL A  &mt LEFT_COMMAND S    &mt LEFT_SHIFT E           &none             &none  &mt RIGHT_SHIFT T  &mt RIGHT_COMMAND I  &mt RIGHT_CONTROL D  &mt RIGHT_ALT O  &none
&none           &kp V        &kp B               &kp H               &kp R      &bt BT_NXT        &bt BT_CLR              &kp L                &kp W                &kp K            &kp J  &none
                                       &mo_kp 2 DELETE  &mo_kp 3 BACKSPACE  &mo_kp 4 SPACE    &mo_kp 5 ENTER       &mo_kp 6 TAB      &mo_kp 7 ESCAPE
            >;
        };

        transparent {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &none
&none  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &none
&none  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &none
                       &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        quotes_dashes {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp RA(SINGLE_QUOTE)          &kp RA(O)  &kp RA(A)  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans               &kp SQT  &kp DOUBLE_QUOTES  &kp GRAVE  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans             &kp MINUS     &kp UNDERSCORE  &kp TILDE  &trans  &trans
                        &trans  &trans  &trans    &trans                &trans             &trans
            >;
        };

        punctuation_brackets {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &trans  &trans   &none  &trans  &trans    &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS   &kp LESS_THAN  &kp GREATER_THAN  &none
&none  &trans  &trans  &trans  &trans  &trans    &trans             &kp COMMA                &kp DOT        &kp SEMI         &kp COLON  &none
&none  &trans  &trans  &trans  &trans  &trans    &trans      &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp LEFT_BRACE   &kp RIGHT_BRACE  &none
                       &trans  &trans  &trans    &trans                &trans                 &trans
            >;
        };

        numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp BSLH  &kp N7  &kp N8  &kp N9     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp FSLH  &kp N4  &kp N5  &kp N6  &kp MINUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &kp N0  &kp N1  &kp N2  &kp N3  &kp EQUAL  &trans
                        &trans  &trans  &trans      &trans  &trans  &trans
            >;
        };

        navigation {
            bindings = <
&trans  &kp LA(LG(LEFT_ARROW))     &kp PG_UP  &kp PG_DN  &kp LA(LG(RIGHT))  &trans    &trans  &trans  &trans  &trans  &trans  &trans
 &none          &kp LEFT_ARROW  &kp UP_ARROW   &kp DOWN          &kp RIGHT  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans            &kp LG(LEFT)      &kp HOME    &kp END      &kp LG(RIGHT)  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                                 &trans             &trans  &trans    &trans  &trans  &trans
            >;
        };

        mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        function_keys {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3   &kp F4  &trans    &trans  &kp F13  &kp F14  &kp F15  &kp F16  &trans
&trans  &kp F5   &kp F6   &kp F7   &kp F8  &trans    &trans  &kp F17  &kp F18  &kp F19  &kp F20  &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &kp F21  &kp F22  &kp F23  &kp F24  &trans
                          &trans   &trans  &trans    &trans   &trans   &trans
            >;
        };
    };
};
